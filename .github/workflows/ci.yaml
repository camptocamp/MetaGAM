name: MetaGam

on: [push]


jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: ${{ matrix.python-version }}
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit -V
      - name: lint
        run: |
          echo "Linting code... This will take about 10 seconds."
          pre-commit run --all-files
          echo "No lint issues found."

  docker:
    runs-on: ubuntu-latest
    container:
      image: qgis/qgis:release-3_16
      env:
        DOCKER_HOST: "tcp://docker:2375"
    services:
      database:
        image: postgis/postgis:12-2.5

    steps:
      - uses: actions/checkout@v4
      - name: install dependencies
        run: |
          apt update
          apt install -y libqt5sql5-psql
          pip install nose requests_mock
      - name: Initialize DB
        run: psql -h database -d geonetwork -f ./postgres/sql/01_db_xsmall_hydre.sql
      - name: Run tests
        # skip tests which depend on a running local geonetwork server
        run: |
          cd meta_gam
          export PGSERVICEFILE=../qgis/pg_service.conf
          export GN_URL=http://geonetwork:8080/geonetwork
          export TEST_SELECTOR='-a !localGN'
          xvfb-run make test
