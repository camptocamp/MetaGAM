volumes:
  geonetwork:
  esdata:
  pgdata:
  pglog:
  qgis-settings:
  schemaspy:


networks:
  gn-network:
    driver: bridge


services:
  qgis:
    image: gam_qgis
    build: ./qgis
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - qgis-settings:/home/user/.local/share/QGIS/QGIS3/profiles/default
      - .:/app
    environment:
      - PYTHONPATH=/app:/usr/share/qgis/python/plugins/
      - QGIS_DEBUG=0
      - QGIS_LOG_FILE=/dev/null
      - QGIS_PLUGINPATH=/app
      - DISPLAY=${DISPLAY}
      - PGSERVICEFILE=/pg_service.conf
      - GN_URL=http://geonetwork:8080/geonetwork
    entrypoint: ""
    command: qgis
    networks:
      - gn-network



  database:
    image: postgis/postgis:12-2.5
    environment:
      POSTGRES_USER: geonetwork
      POSTGRES_PASSWORD: geonetwork
      POSTGRES_DB: geonetwork
    command: [ "postgres",
               "-c", "log_statement=all",
               "-c", "logging_collector=true",
               "-c", "log_file_mode=0644",
               "-c", "log_directory=/var/log/postgresql",
               "-c", "log_filename=postgresql.log" ]
    volumes:
      - ./postgres/sql:/docker-entrypoint-initdb.d:ro
      - pgdata:/var/lib/postgresql/data
      - pglog:/var/log/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - gn-network

  schemaspy:
    image: schemaspy/schemaspy:6.1.0
    entrypoint: /bin/sh
    command:
      - -c
      - |
        export MAIN_CLASS=$$(unzip -p schemaspy*.jar META-INF/MANIFEST.MF | grep Main-Class | awk -F ': ' '{sub(/\r/,"",$$2);print $$2}')
        [ "$$(ls -A /drivers)" ] && export DRIVER_PATH=/drivers/ || export DRIVER_PATH=/drivers_inc/
        echo "Running Main-Class $$MAIN_CLASS"
        echo -n "With drivers:"
        ls -Ax $$DRIVER_PATH | sed -e 's/  */, /g'
        while ! java -cp *:$$DRIVER_PATH* $$MAIN_CLASS -o /output -u geonetwork -p geonetwork -db sig -s sit_hydre -t pgsql -host database -port 5432
        do
          sleep 20
        done
    links:
      - database
    volumes:
      - schemaspy:/output:rw
    networks:
      - gn-network

  geonetwork:
    image: geonetwork:4.4.2
    depends_on:
      - database
    ports:
      - 8080:8080
    volumes:
      - geonetwork:/catalogue-data
    environment:
      WEBAPP_CONTEXT_PATH: /geonetwork
      DATA_DIR: /catalogue-data
      TZ: Europe/Paris

      JAVA_OPTS: >-
        --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
        -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
        -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC
        -Djetty.httpConfig.requestHeaderSize=32768
        -Dorg.eclipse.jetty.server.Request.maxFormContentSize=500000
        -Dorg.eclipse.jetty.server.Request.maxFormKeys=4000

      GN_CONFIG_PROPERTIES: >-
        -Dgeonetwork.dir=/catalogue-data
        -Dgeonetwork.formatter.dir=/catalogue-data/data/formatter
        -Dgeonetwork.schema.dir=/opt/geonetwork/WEB-INF/data/config/schema_plugins
        -Dgeonetwork.indexConfig.dir=/opt/geonetwork/WEB-INF/data/config/index
        -Dgeonetwork.schemapublication.dir=/opt/geonetwork/WEB-INF/data/resources/schemapublication
        -Dgeonetwork.htmlcache.dir=/opt/geonetwork/WEB-INF/data/resources/htmlcache
        -Des.host=elasticsearch
        -Des.protocol=http
        -Des.port=9200
        -Des.url=http://elasticsearch:9200
        -Des.username=
        -Des.password=
        -Dgeonetwork.ESFeaturesProxy.targetUri=http://elasticsearch:9200/gn-features/{_}
        -Dgeonetwork.HttpDashboardProxy.targetUri=http://kibana:5601
        -Dgeonetwork.MicroServicesProxy.targetUri=http://ogc-api-records-service:8080

      GEONETWORK_DB_TYPE: postgres
      GEONETWORK_DB_HOST: database
      GEONETWORK_DB_PORT: 5432
      GEONETWORK_DB_NAME: geonetwork
      GEONETWORK_DB_USERNAME: geonetwork
      GEONETWORK_DB_PASSWORD: geonetwork
      VIRTUAL_HOST: localhost
      HARVESTER_SCHEDULER_ENABLED: "true"
      HARVESTER_REFRESH_INTERVAL_MINUTES: 2
    healthcheck:
      test: "curl http://localhost:8080/"
      interval: 5s
      timeout: 5s
      retries: 30
    restart: always
    networks:
      - gn-network


  # datahub:
  #   image: docker.io/geonetwork/geonetwork-ui-datahub:latest
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.datahub.rule=PathPrefix(`/datahub`)"
  #     - "traefik.http.routers.datahub.entrypoints=web"
  #   networks:
  #     - gn-network


  ogc-api-records-service:
    image: geonetwork/gn-cloud-ogc-api-records-service:4.2.5-1
    depends_on:
      - geonetwork
    environment:
      SPRING_PROFILES_ACTIVE: standalone
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/geonetwork
      SPRING_DATASOURCE_USERNAME: geonetwork
      SPRING_DATASOURCE_PASSWORD: geonetwork
      GN_BASEURL: http://geonetwork.localhost/geonetwork/api
      GN_LEGACY_URL: http://geonetwork.localhost/geonetwork
      GN_INDEX_URL: http://elasticsearch:9200
      SERVER_FORWARDHEADERSSTRATEGY: FRAMEWORK
      JAVA_OPTS: -Dfile.encoding=UTF-8
    healthcheck:
      test: "timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1"
      interval: 10s
      timeout: 2s
      retries: 10
    networks:
      - gn-network


  elasticsearch:
    image: elasticsearch:7.17.15
    # ports:
    #   - 9201:9200
    environment:
      ES_JAVA_OPTS: "-Xms1G -Xmx1G"
      discovery.type: single-node
      # cluster.routing.allocation.disk.threshold_enabled: "false"
      cluster.routing.allocation.disk.watermark.flood_stage": "1gb"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: "curl -s http://localhost:9200 >/dev/null || exit 1"
      interval: 10s
      timeout: 2s
      retries: 10
    networks:
      - gn-network

  kibana:
    image: kibana:7.17.15
    environment:
      SERVER_NAME: 'kibana'
      ELASTICSEARCH_URL: http://elasticsearch:9200/
      SERVER_BASEPATH: /geonetwork/dashboards
      SERVER_REWRITEBASEPATH: 'false'
      KIBANA_INDEX: .dashboards
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: 'true'
    depends_on:
      - elasticsearch
    networks:
      - gn-network
